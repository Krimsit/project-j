/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardDashboardLayoutImport } from './routes/dashboard/_dashboardLayout'
import { Route as AuthAuthLayoutImport } from './routes/auth/_authLayout'
import { Route as DashboardDashboardLayoutIndexImport } from './routes/dashboard/_dashboardLayout/index'
import { Route as AuthAuthLayoutRegistrationImport } from './routes/auth/_authLayout/registration'
import { Route as AuthAuthLayoutLoginImport } from './routes/auth/_authLayout/login'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()
const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDashboardLayoutRoute = DashboardDashboardLayoutImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthAuthLayoutRoute = AuthAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardDashboardLayoutIndexRoute =
  DashboardDashboardLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardDashboardLayoutRoute,
  } as any)

const AuthAuthLayoutRegistrationRoute = AuthAuthLayoutRegistrationImport.update(
  {
    id: '/registration',
    path: '/registration',
    getParentRoute: () => AuthAuthLayoutRoute,
  } as any,
)

const AuthAuthLayoutLoginRoute = AuthAuthLayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_authLayout': {
      id: '/auth/_authLayout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_dashboardLayout': {
      id: '/dashboard/_dashboardLayout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/_authLayout/login': {
      id: '/auth/_authLayout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLayoutLoginImport
      parentRoute: typeof AuthAuthLayoutImport
    }
    '/auth/_authLayout/registration': {
      id: '/auth/_authLayout/registration'
      path: '/registration'
      fullPath: '/auth/registration'
      preLoaderRoute: typeof AuthAuthLayoutRegistrationImport
      parentRoute: typeof AuthAuthLayoutImport
    }
    '/dashboard/_dashboardLayout/': {
      id: '/dashboard/_dashboardLayout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardDashboardLayoutIndexImport
      parentRoute: typeof DashboardDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthAuthLayoutRouteChildren {
  AuthAuthLayoutLoginRoute: typeof AuthAuthLayoutLoginRoute
  AuthAuthLayoutRegistrationRoute: typeof AuthAuthLayoutRegistrationRoute
}

const AuthAuthLayoutRouteChildren: AuthAuthLayoutRouteChildren = {
  AuthAuthLayoutLoginRoute: AuthAuthLayoutLoginRoute,
  AuthAuthLayoutRegistrationRoute: AuthAuthLayoutRegistrationRoute,
}

const AuthAuthLayoutRouteWithChildren = AuthAuthLayoutRoute._addFileChildren(
  AuthAuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthLayoutRoute: typeof AuthAuthLayoutRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLayoutRoute: AuthAuthLayoutRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardDashboardLayoutRouteChildren {
  DashboardDashboardLayoutIndexRoute: typeof DashboardDashboardLayoutIndexRoute
}

const DashboardDashboardLayoutRouteChildren: DashboardDashboardLayoutRouteChildren =
  {
    DashboardDashboardLayoutIndexRoute: DashboardDashboardLayoutIndexRoute,
  }

const DashboardDashboardLayoutRouteWithChildren =
  DashboardDashboardLayoutRoute._addFileChildren(
    DashboardDashboardLayoutRouteChildren,
  )

interface DashboardRouteChildren {
  DashboardDashboardLayoutRoute: typeof DashboardDashboardLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardLayoutRoute: DashboardDashboardLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardDashboardLayoutRouteWithChildren
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/registration': typeof AuthAuthLayoutRegistrationRoute
  '/dashboard/': typeof DashboardDashboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardDashboardLayoutIndexRoute
  '/auth/login': typeof AuthAuthLayoutLoginRoute
  '/auth/registration': typeof AuthAuthLayoutRegistrationRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_authLayout': typeof AuthAuthLayoutRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_dashboardLayout': typeof DashboardDashboardLayoutRouteWithChildren
  '/auth/_authLayout/login': typeof AuthAuthLayoutLoginRoute
  '/auth/_authLayout/registration': typeof AuthAuthLayoutRegistrationRoute
  '/dashboard/_dashboardLayout/': typeof DashboardDashboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/auth/registration'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/dashboard' | '/auth/login' | '/auth/registration'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/auth/_authLayout'
    | '/dashboard'
    | '/dashboard/_dashboardLayout'
    | '/auth/_authLayout/login'
    | '/auth/_authLayout/registration'
    | '/dashboard/_dashboardLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_authLayout"
      ]
    },
    "/auth/_authLayout": {
      "filePath": "auth/_authLayout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_authLayout/login",
        "/auth/_authLayout/registration"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboardLayout"
      ]
    },
    "/dashboard/_dashboardLayout": {
      "filePath": "dashboard/_dashboardLayout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboardLayout/"
      ]
    },
    "/auth/_authLayout/login": {
      "filePath": "auth/_authLayout/login.tsx",
      "parent": "/auth/_authLayout"
    },
    "/auth/_authLayout/registration": {
      "filePath": "auth/_authLayout/registration.tsx",
      "parent": "/auth/_authLayout"
    },
    "/dashboard/_dashboardLayout/": {
      "filePath": "dashboard/_dashboardLayout/index.tsx",
      "parent": "/dashboard/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
