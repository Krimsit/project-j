/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticationAuthLayoutImport } from './routes/authentication/_authLayout'
import { Route as AuthenticationAuthLayoutRegistrationImport } from './routes/authentication/_authLayout/registration'
import { Route as AuthenticationAuthLayoutLoginImport } from './routes/authentication/_authLayout/login'
import { Route as AuthDashboardDashboardLayoutImport } from './routes/_auth/dashboard/_dashboardLayout'
import { Route as AuthDashboardDashboardLayoutIndexImport } from './routes/_auth/dashboard/_dashboardLayout/index'
import { Route as AuthDashboardDashboardLayoutProjectIdIndexImport } from './routes/_auth/dashboard/_dashboardLayout/$projectId/index'

// Create Virtual Routes

const AuthenticationImport = createFileRoute('/authentication')()
const AuthDashboardImport = createFileRoute('/_auth/dashboard')()

// Create/Update Routes

const AuthenticationRoute = AuthenticationImport.update({
  id: '/authentication',
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthenticationAuthLayoutRoute = AuthenticationAuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => AuthenticationRoute,
} as any)

const AuthenticationAuthLayoutRegistrationRoute =
  AuthenticationAuthLayoutRegistrationImport.update({
    id: '/registration',
    path: '/registration',
    getParentRoute: () => AuthenticationAuthLayoutRoute,
  } as any)

const AuthenticationAuthLayoutLoginRoute =
  AuthenticationAuthLayoutLoginImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => AuthenticationAuthLayoutRoute,
  } as any)

const AuthDashboardDashboardLayoutRoute =
  AuthDashboardDashboardLayoutImport.update({
    id: '/_dashboardLayout',
    getParentRoute: () => AuthDashboardRoute,
  } as any)

const AuthDashboardDashboardLayoutIndexRoute =
  AuthDashboardDashboardLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthDashboardDashboardLayoutRoute,
  } as any)

const AuthDashboardDashboardLayoutProjectIdIndexRoute =
  AuthDashboardDashboardLayoutProjectIdIndexImport.update({
    id: '/$projectId/',
    path: '/$projectId/',
    getParentRoute: () => AuthDashboardDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/authentication/_authLayout': {
      id: '/authentication/_authLayout'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationAuthLayoutImport
      parentRoute: typeof AuthenticationRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/_dashboardLayout': {
      id: '/_auth/dashboard/_dashboardLayout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardDashboardLayoutImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/authentication/_authLayout/login': {
      id: '/authentication/_authLayout/login'
      path: '/login'
      fullPath: '/authentication/login'
      preLoaderRoute: typeof AuthenticationAuthLayoutLoginImport
      parentRoute: typeof AuthenticationAuthLayoutImport
    }
    '/authentication/_authLayout/registration': {
      id: '/authentication/_authLayout/registration'
      path: '/registration'
      fullPath: '/authentication/registration'
      preLoaderRoute: typeof AuthenticationAuthLayoutRegistrationImport
      parentRoute: typeof AuthenticationAuthLayoutImport
    }
    '/_auth/dashboard/_dashboardLayout/': {
      id: '/_auth/dashboard/_dashboardLayout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthDashboardDashboardLayoutIndexImport
      parentRoute: typeof AuthDashboardDashboardLayoutImport
    }
    '/_auth/dashboard/_dashboardLayout/$projectId/': {
      id: '/_auth/dashboard/_dashboardLayout/$projectId/'
      path: '/$projectId'
      fullPath: '/dashboard/$projectId'
      preLoaderRoute: typeof AuthDashboardDashboardLayoutProjectIdIndexImport
      parentRoute: typeof AuthDashboardDashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthDashboardDashboardLayoutRouteChildren {
  AuthDashboardDashboardLayoutIndexRoute: typeof AuthDashboardDashboardLayoutIndexRoute
  AuthDashboardDashboardLayoutProjectIdIndexRoute: typeof AuthDashboardDashboardLayoutProjectIdIndexRoute
}

const AuthDashboardDashboardLayoutRouteChildren: AuthDashboardDashboardLayoutRouteChildren =
  {
    AuthDashboardDashboardLayoutIndexRoute:
      AuthDashboardDashboardLayoutIndexRoute,
    AuthDashboardDashboardLayoutProjectIdIndexRoute:
      AuthDashboardDashboardLayoutProjectIdIndexRoute,
  }

const AuthDashboardDashboardLayoutRouteWithChildren =
  AuthDashboardDashboardLayoutRoute._addFileChildren(
    AuthDashboardDashboardLayoutRouteChildren,
  )

interface AuthDashboardRouteChildren {
  AuthDashboardDashboardLayoutRoute: typeof AuthDashboardDashboardLayoutRouteWithChildren
}

const AuthDashboardRouteChildren: AuthDashboardRouteChildren = {
  AuthDashboardDashboardLayoutRoute:
    AuthDashboardDashboardLayoutRouteWithChildren,
}

const AuthDashboardRouteWithChildren = AuthDashboardRoute._addFileChildren(
  AuthDashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticationAuthLayoutRouteChildren {
  AuthenticationAuthLayoutLoginRoute: typeof AuthenticationAuthLayoutLoginRoute
  AuthenticationAuthLayoutRegistrationRoute: typeof AuthenticationAuthLayoutRegistrationRoute
}

const AuthenticationAuthLayoutRouteChildren: AuthenticationAuthLayoutRouteChildren =
  {
    AuthenticationAuthLayoutLoginRoute: AuthenticationAuthLayoutLoginRoute,
    AuthenticationAuthLayoutRegistrationRoute:
      AuthenticationAuthLayoutRegistrationRoute,
  }

const AuthenticationAuthLayoutRouteWithChildren =
  AuthenticationAuthLayoutRoute._addFileChildren(
    AuthenticationAuthLayoutRouteChildren,
  )

interface AuthenticationRouteChildren {
  AuthenticationAuthLayoutRoute: typeof AuthenticationAuthLayoutRouteWithChildren
}

const AuthenticationRouteChildren: AuthenticationRouteChildren = {
  AuthenticationAuthLayoutRoute: AuthenticationAuthLayoutRouteWithChildren,
}

const AuthenticationRouteWithChildren = AuthenticationRoute._addFileChildren(
  AuthenticationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/authentication': typeof AuthenticationAuthLayoutRouteWithChildren
  '/dashboard': typeof AuthDashboardDashboardLayoutRouteWithChildren
  '/authentication/login': typeof AuthenticationAuthLayoutLoginRoute
  '/authentication/registration': typeof AuthenticationAuthLayoutRegistrationRoute
  '/dashboard/': typeof AuthDashboardDashboardLayoutIndexRoute
  '/dashboard/$projectId': typeof AuthDashboardDashboardLayoutProjectIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/authentication': typeof AuthenticationAuthLayoutRouteWithChildren
  '/dashboard': typeof AuthDashboardDashboardLayoutIndexRoute
  '/authentication/login': typeof AuthenticationAuthLayoutLoginRoute
  '/authentication/registration': typeof AuthenticationAuthLayoutRegistrationRoute
  '/dashboard/$projectId': typeof AuthDashboardDashboardLayoutProjectIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/authentication': typeof AuthenticationRouteWithChildren
  '/authentication/_authLayout': typeof AuthenticationAuthLayoutRouteWithChildren
  '/_auth/dashboard': typeof AuthDashboardRouteWithChildren
  '/_auth/dashboard/_dashboardLayout': typeof AuthDashboardDashboardLayoutRouteWithChildren
  '/authentication/_authLayout/login': typeof AuthenticationAuthLayoutLoginRoute
  '/authentication/_authLayout/registration': typeof AuthenticationAuthLayoutRegistrationRoute
  '/_auth/dashboard/_dashboardLayout/': typeof AuthDashboardDashboardLayoutIndexRoute
  '/_auth/dashboard/_dashboardLayout/$projectId/': typeof AuthDashboardDashboardLayoutProjectIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/authentication'
    | '/dashboard'
    | '/authentication/login'
    | '/authentication/registration'
    | '/dashboard/'
    | '/dashboard/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/authentication'
    | '/dashboard'
    | '/authentication/login'
    | '/authentication/registration'
    | '/dashboard/$projectId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/authentication'
    | '/authentication/_authLayout'
    | '/_auth/dashboard'
    | '/_auth/dashboard/_dashboardLayout'
    | '/authentication/_authLayout/login'
    | '/authentication/_authLayout/registration'
    | '/_auth/dashboard/_dashboardLayout/'
    | '/_auth/dashboard/_dashboardLayout/$projectId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticationRoute: typeof AuthenticationRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AuthenticationRoute: AuthenticationRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/authentication"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/authentication": {
      "filePath": "authentication",
      "children": [
        "/authentication/_authLayout"
      ]
    },
    "/authentication/_authLayout": {
      "filePath": "authentication/_authLayout.tsx",
      "parent": "/authentication",
      "children": [
        "/authentication/_authLayout/login",
        "/authentication/_authLayout/registration"
      ]
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard",
      "parent": "/_auth",
      "children": [
        "/_auth/dashboard/_dashboardLayout"
      ]
    },
    "/_auth/dashboard/_dashboardLayout": {
      "filePath": "_auth/dashboard/_dashboardLayout.tsx",
      "parent": "/_auth/dashboard",
      "children": [
        "/_auth/dashboard/_dashboardLayout/",
        "/_auth/dashboard/_dashboardLayout/$projectId/"
      ]
    },
    "/authentication/_authLayout/login": {
      "filePath": "authentication/_authLayout/login.tsx",
      "parent": "/authentication/_authLayout"
    },
    "/authentication/_authLayout/registration": {
      "filePath": "authentication/_authLayout/registration.tsx",
      "parent": "/authentication/_authLayout"
    },
    "/_auth/dashboard/_dashboardLayout/": {
      "filePath": "_auth/dashboard/_dashboardLayout/index.tsx",
      "parent": "/_auth/dashboard/_dashboardLayout"
    },
    "/_auth/dashboard/_dashboardLayout/$projectId/": {
      "filePath": "_auth/dashboard/_dashboardLayout/$projectId/index.tsx",
      "parent": "/_auth/dashboard/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
